sudo: false
language: bash
dist: bionic

script:
  - echo -e "Host $VPS_HOST\n\tStrictHostKeyChecking no\n" >>~/.ssh/config
  - echo $VPS_KEY | base64 --decode >~/.ssh/travis_rsa
  - chmod 600 ~/.ssh/travis_rsa
  - eval "$(ssh-agent -s)"
  - ssh-add ~/.ssh/travis_rsa
  - ls -la $TRAVIS_BUILD_DIR
  - ssh -i ~/.ssh/travis_rsa -o UserKnownHostsFile=/dev/null $VPS_USERNAME@$VPS_HOST "docker version && docker-compose version"

  #cleanup
  - ssh -i ~/.ssh/travis_rsa -o UserKnownHostsFile=/dev/null $VPS_USERNAME@$VPS_HOST "rm -rf /root/givehost"
  - ssh -i ~/.ssh/travis_rsa -o UserKnownHostsFile=/dev/null $VPS_USERNAME@$VPS_HOST "ls -la /root/"
  - ssh -i ~/.ssh/travis_rsa -o UserKnownHostsFile=/dev/null $VPS_USERNAME@$VPS_HOST "mkdir /root/givehost"
  #copy sources
  - scp -r $TRAVIS_BUILD_DIR/* $VPS_USERNAME@$VPS_HOST:/root/givehost
  - ssh -i ~/.ssh/travis_rsa -o UserKnownHostsFile=/dev/null $VPS_USERNAME@$VPS_HOST "ls -la /root/givehost"


  # app config
  - echo "SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/${DATABASE_NAME}" > appenv
  - echo "SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}" >> appenv
  - echo "SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}" >> appenv
  - echo "SPRING_JPA_HIBERNATE_DDL_AUTO=update" >> appenv
  - echo "SERVER_SSL_KEYSTOREPASSWORD=${KEYSTOREPASSWORD}" >> appenv

  # db config
  - echo "POSTGRES_PASSWORD=${DATABASE_PASSWORD}" > dbenv
  - echo "POSTGRES_USER=${DATABASE_USERNAME}" >> dbenv
  - echo "POSTGRES_DB=${DATABASE_NAME}" >> dbenv

  - ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "sh /root/givehost/scripts/clean.sh"

  #let's encrypt
  #- ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "apt install snapd -y"
  #- ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "snapd --version"
  #- ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "snap install core; snap refresh core"
  #- ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "snap install --classic certbot"
  #- ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "ln -s /snap/bin/certbot /usr/bin/certbot -f"
  #- ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "certbot --version"
  #- ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "certbot-auto certonly -a standalone -d givehost.me"
  #- ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "cd /etc/letsencrypt/live/givehost.me/"
  #- ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "givehost.me# openssl pkcs12 -export -in fullchain.pem -inkey privkey.pem -out keystore.p12 -name tomcat  -CAfile chain.pem -caname root"

  - ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "docker ps --all"
  - ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "printenv"

  - scp appenv $VPS_USERNAME@$VPS_HOST:/root/givehost/app.env
  - scp dbenv $VPS_USERNAME@$VPS_HOST:/root/givehost/db.env

  - ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "cd /root/givehost && docker-compose up --detach --build"
  - ssh -i ~/.ssh/travis_rsa $VPS_USERNAME@$VPS_HOST "docker ps --all"